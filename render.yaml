services:
  - type: web
    name: college-chatbot-backend
    env: python
    rootDir: backend
    buildCommand: pip install -r requirements.txt
    startCommand: gunicorn --worker-class eventlet -w 1 --bind 0.0.0.0:$PORT app:app
    envVars:
      - key: FLASK_ENV
        value: production
      - key: SECRET_KEY
        generateValue: true
      - key: MONGODB_URI
        fromDatabase:
          name: chatbot-db
          property: connectionString
    healthCheckPath: /

  - type: web
    name: college-chatbot-frontend
    env: static
    rootDir: frontend
    buildCommand: npm install && npm run build
    staticPublishPath: dist   # if Vite, use "build" if CRA
    pullRequestPreviewsEnabled: false
    buildFilter:
      paths:
        - frontend/**
    headers:
      - path: /*
        name: X-Frame-Options
        value: DENY
      - path: /*
        name: X-Content-Type-Options
        value: nosniff

databases:
  - name: chatbot-db
    databaseName: chatbot
    plan: free
